{
    "created_at": "2025-10-02T17:58:00-05:00",
    "metadata": {
        "description": "\n        RABI CHEVRON - DURATION VS AMPLITUDE\nThis sequence involves executing the qubit x180 pulse and measuring the state\nof the resonator across various qubit intermediate frequencies and pulse durations.\nAnalyzing the results allows for determining the qubit and estimating the x180 pulse duration for a specific amplitude.\n\nPrerequisites:\n    - Having calibrated the mixer or the Octave (nodes 01a or 01b).\n    - Having calibrated the qubit frequency (node 03a_qubit_spectroscopy.py and/or 03b_qubit_spectroscopy_vs_flux.py).\n    - Having specified the desired flux point if relevant (qubit.z.flux_point).\n\nState update:\n    - Manually set the x180 pulse duration qubit.xy.operation[\"x180\"].length.\n",
        "run_start": "2025-10-02T17:57:44.823-05:00",
        "run_end": "2025-10-02T17:58:00.246-05:00",
        "name": "rabi_chevron",
        "data_path": "2025-10-02/#4_rabi_chevron_175800"
    },
    "data": {
        "parameters": {
            "model": {
                "qubits": [
                    "q1"
                ],
                "multiplexed": false,
                "use_state_discrimination": false,
                "reset_type": "thermal",
                "num_shots": 100,
                "min_wait_time_in_ns": 16,
                "max_wait_time_in_ns": 250,
                "time_step_in_ns": 4,
                "frequency_step_in_mhz": 4.0,
                "frequency_span_in_mhz": 100.0,
                "simulate": false,
                "simulation_duration_ns": 50000,
                "use_waveform_report": true,
                "timeout": 120,
                "load_data_id": null
            },
            "schema": {
                "additionalProperties": false,
                "properties": {
                    "qubits": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "A list of qubit names which should participate in the execution of the node. Default is None.",
                        "title": "Qubits"
                    },
                    "multiplexed": {
                        "default": false,
                        "description": "Whether to play control pulses, readout pulses and active/thermal reset at the same time for all qubits (True)\nor to play the experiment sequentially for each qubit (False). Default is False.",
                        "title": "Multiplexed",
                        "type": "boolean"
                    },
                    "use_state_discrimination": {
                        "default": false,
                        "description": "Whether to use on-the-fly state discrimination and return the qubit 'state', or simply return the demodulated\nquadratures 'I' and 'Q'. Default is False.",
                        "title": "Use State Discrimination",
                        "type": "boolean"
                    },
                    "reset_type": {
                        "default": "thermal",
                        "description": "The qubit reset method to use. Must be implemented as a method of Quam.qubit. Can be \"thermal\", \"active\", or\n\"active_gef\". Default is \"thermal\".",
                        "enum": [
                            "thermal",
                            "active",
                            "active_gef"
                        ],
                        "title": "Reset Type",
                        "type": "string"
                    },
                    "num_shots": {
                        "default": 100,
                        "title": "Num Shots",
                        "type": "integer"
                    },
                    "min_wait_time_in_ns": {
                        "default": 16,
                        "title": "Min Wait Time In Ns",
                        "type": "integer"
                    },
                    "max_wait_time_in_ns": {
                        "default": 250,
                        "title": "Max Wait Time In Ns",
                        "type": "integer"
                    },
                    "time_step_in_ns": {
                        "default": 4,
                        "title": "Time Step In Ns",
                        "type": "integer"
                    },
                    "frequency_step_in_mhz": {
                        "default": 4,
                        "title": "Frequency Step In Mhz",
                        "type": "number"
                    },
                    "frequency_span_in_mhz": {
                        "default": 100,
                        "title": "Frequency Span In Mhz",
                        "type": "number"
                    },
                    "simulate": {
                        "default": false,
                        "description": "Simulate the waveforms on the OPX instead of executing the program. Default is False.",
                        "title": "Simulate",
                        "type": "boolean"
                    },
                    "simulation_duration_ns": {
                        "default": 50000,
                        "description": "Duration over which the simulation will collect samples (in nanoseconds). Default is 50_000 ns.",
                        "title": "Simulation Duration Ns",
                        "type": "integer"
                    },
                    "use_waveform_report": {
                        "default": true,
                        "description": "Whether to use the interactive waveform report in simulation. Default is True.",
                        "title": "Use Waveform Report",
                        "type": "boolean"
                    },
                    "timeout": {
                        "default": 120,
                        "description": "Waiting time for the OPX resources to become available before giving up (in seconds). Default is 120 s.",
                        "title": "Timeout",
                        "type": "integer"
                    },
                    "load_data_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null,
                        "description": "Optional QUAlibrate node run index for loading historical data. Default is None.",
                        "title": "Load Data Id"
                    }
                },
                "title": "Parameters",
                "type": "object"
            }
        },
        "outcomes": {
            "q1": "failed"
        },
        "quam": "./quam_state"
    },
    "id": 4,
    "parents": [
        3
    ]
}